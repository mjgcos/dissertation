b3 <- ggplot(data=subset(df, country %in% c("PT", "IT", "IE", "GR", "ES", "DE")),
aes(date, yield/100, colour=c("purple", "darkgreen", "green",
"blue", "yellow", "black"))) +
geom_line() +
scale_y_continuous(labels = percent_format()) +
scale_size_manual(values=c(rep.int(1, 19))) +
scale_linetype_manual(values=c(rep.int(1, 19))) +
ylab("European Long Term Bond Yields (ECB)") +
theme_bw()
require(ggplot2)
require(zoo)
require(reshape2)
require(RColorBrewer)
require(tidyr)
require(dplyr)
require(plyr)
require(scales) #for percentage point scales
require(chron)
require(manipulate) # for checkbox/picker.
setwd("~/Academic/SGPE/Dissertation/Data/csv/")
data <- read.csv("long_term_interest_rates_ECB.csv")
data$date <- as.yearmon(data$date, "%Y%b")
data$date <- as.Date(data$date, "%b %Y")
x <- colnames(data)
df <- data %>%
gather(country, yield, Austria..Euro:Slovakia..Euro)
levels(df$country) <- c("AT", "BE", "CY", "DE", "ES", "FI", "FR", "UK", "GR", "IE", "IT", "LT", "LU", "LV", "MT", "NL", "PT", "SI", "SK")
df$date <- as.chron(df$date)
df$date <- as.Date(df$date, format="%m/%d/%y")
b3 <- ggplot(data=subset(df, country %in% c("PT", "IT", "IE", "GR", "ES", "DE")),
aes(date, yield/100, colour=c("purple", "darkgreen", "green",
"blue", "yellow", "black"))) +
geom_line() +
scale_y_continuous(labels = percent_format()) +
scale_size_manual(values=c(rep.int(1, 19))) +
scale_linetype_manual(values=c(rep.int(1, 19))) +
ylab("European Long Term Bond Yields (ECB)") +
theme_bw()
b3
b3 <- ggplot(data=subset(df, country %in% c("PT", "IT", "IE", "GR", "ES", "DE")),
aes(date, yield/100, colour=country)) +
geom_line() +
scale_y_continuous(labels = percent_format()) +
scale_size_manual(values=c(rep.int(1, 19))) +
scale_linetype_manual(values=c(rep.int(1, 19))) +
ylab("European Long Term Bond Yields (ECB)") +
theme_bw()
b4 <- b3 +
geom_vline(xintercept=as.numeric(as.Date("2009-10-20"))) +
geom_vline(xintercept=as.numeric(as.Date("1999-01-01")))
b4
str(df)
?scale_color_manual
publish_plot <- ggplot(data=subset(df, country %in% c("PT", "IT", "IE", "GR", "ES", "DE")),
aes(date, yield/100, colour= country)) +
geom_line() +
scale_y_continuous(labels = percent_format()) +
scale_size_manual(values=c(rep.int(1, 19))) +
scale_linetype_manual(values=c(rep.int(1, 19))) +
scale_colour_manual(values = c("purple", "darkgreen", "green",
"blue", "yellow", "black"))
ylab("European Long Term Bond Yields (ECB)") +
theme_bw()
publish_plot
publish_plot <- ggplot(data=subset(df, country %in% c("PT", "IT", "IE", "GR", "ES", "DE")),
aes(date, yield/100, colour= country)) +
geom_line() +
scale_y_continuous(labels = percent_format()) +
scale_size_manual(values=c(rep.int(1, 19))) +
scale_linetype_manual(values=c(rep.int(1, 19))) +
scale_colour_manual(values = c("black", "yellow","blue","green","darkgreen","purple"))
ylab("European Long Term Bond Yields (ECB)") +
theme_bw()
publish_plot
publish_plot <- ggplot(data=subset(df, country %in% c("PT", "IT", "IE", "GR", "ES", "DE")),
aes(date, yield/100, colour= country)) +
geom_line() +
scale_y_continuous(labels = percent_format()) +
scale_size_manual(values=c(rep.int(1, 19))) +
scale_linetype_manual(values=c(rep.int(1, 19))) +
scale_colour_manual(values = c("black", "yellow","blue","green","darkgreen","purple"))
ylab("European Long Term Bond Yields (ECB)") +
theme_bw()
#Adding Greek bailout date and Euro circulation date
pp <- ppublish_plot +
geom_vline(xintercept=as.numeric(as.Date("2009-10-20"))) +
geom_vline(xintercept=as.numeric(as.Date("1999-01-01")))
tion date
pp <- publish_plot +
geom_vline(xintercept=as.numeric(as.Date("2009-10-20"))) +
geom_vline(xintercept=as.numeric(as.Date("1999-01-01")))
#Adding Greek bailout date and Euro circulation date
pp <- publish_plot +
geom_vline(xintercept=as.numeric(as.Date("2009-10-20"))) +
geom_vline(xintercept=as.numeric(as.Date("1999-01-01")))
pp
publish_plot <- ggplot(data=subset(df, country %in% c("PT", "IT", "IE", "GR", "ES", "DE")),
aes(date, yield/100, colour= country)) +
geom_line() +
scale_y_continuous(labels = percent_format()) +
scale_size_manual(values=c(rep.int(1, 19))) +
scale_linetype_manual(values=c(rep.int(1, 19))) +
scale_colour_manual(values = c("black", "yellow","blue","green","darkgreen","purple")),
ylab("European Long Term Bond Yields (ECB)") +
theme_bw()
#Adding Greek bailout date and Euro circulation date
pp <- publish_plot +
geom_vline(xintercept=as.numeric(as.Date("2009-10-20"))) +
geom_vline(xintercept=as.numeric(as.Date("1999-01-01")))
pp
publish_plot <- ggplot(data=subset(df, country %in% c("PT", "IT", "IE", "GR", "ES", "DE")),
aes(date, yield/100, colour= country)) +
geom_line() +
scale_y_continuous(labels = percent_format()) +
scale_size_manual(values=c(rep.int(1, 19))) +
scale_linetype_manual(values=c(rep.int(1, 19))) +
scale_colour_manual(values = c("black", "yellow","blue","green","darkgreen","purple")) +
ylab("European Long Term Bond Yields (ECB)") +
theme_bw()
#Adding Greek bailout date and Euro circulation date
pp <- publish_plot +
geom_vline(xintercept=as.numeric(as.Date("2009-10-20"))) +
geom_vline(xintercept=as.numeric(as.Date("1999-01-01")))
pp
publish_plot <- ggplot(data=subset(df, country %in% c("PT", "IT", "IE", "GR", "ES", "DE")),
aes(date, yield/100, colour= country)) +
geom_line() +
scale_y_continuous(labels = percent_format()) +
scale_size_manual(values=c(rep.int(1, 19))) +
scale_linetype_manual(values=c(rep.int(1, 19))) +
scale_colour_manual(values = c("black", "orange","blue","green","darkgreen","purple")) +
ylab("European Long Term Bond Yields (ECB)") +
theme_bw()
#Adding Greek bailout date and Euro circulation date
pp <- publish_plot +
geom_vline(xintercept=as.numeric(as.Date("2009-10-20"))) +
geom_vline(xintercept=as.numeric(as.Date("1999-01-01")))
pp
ggsave(pp, file="../graphics/lti_gpiigs2.pdf")
#library(xlsx)
library(dplyr)
library(tidyr)
setwd("~/Academic/SGPE/Dissertation/Data/csv")
#setwd("~/dissertation/Data/csv/")
dat <- read.csv("datastream_combined.csv", colClasses = "character")
#basic manipulation
for(i in 2:65){
dat[,i] <- as.numeric(dat[,i])
}
dat[,1] <- as.Date(dat[,1], format = "%d/%m/%Y")
dat <- subset(dat, dat$date > as.Date("2007-01-01"))
#Generate bond spreads to DE
dat$bsp_at <- dat[,5] - dat[,2]
dat$bsp_be <- dat[,6] - dat[,2]
dat$bsp_es <- dat[,15] - dat[,2]
dat$bsp_fn <- dat[,11] - dat[,2]
dat$bsp_fr <- dat[,3] - dat[,2]
dat$bsp_gr <- dat[,7] - dat[,2]
dat$bsp_ie <- dat[,8] - dat[,2]
dat$bsp_it <- dat[,4] - dat[,2]
dat$bsp_lt <- dat[,12] - dat[,2]
dat$bsp_ma <- dat[,13] - dat[,2]
dat$bsp_nl <- dat[,9] - dat[,2]
dat$bsp_pt <- dat[,10] - dat[,2]
dat$bsp_sk <- dat[,14] - dat[,2]
#Global Indicators
dat$vix_all <- dat[,16]
dat$vstoxx_all <- dat[,17]
dat$euribor_all <- dat[,18]
#Stock price indices
dat$stocks_at <- dat[,27]
dat$stocks_de <- dat[,20]
dat$stocks_es <- dat[,26]
dat$stocks_fr <- dat[,21]
dat$stocks_gr <- dat[,25]
dat$stocks_ie <- dat[,19]
dat$stocks_it <- dat[,24]
dat$stocks_nl <- dat[,22]
dat$stocks_pt <- dat[,23]
#CDS
dat$cds_at <- dat[,43]
dat$cds_be <- dat[,44]
dat$cds_cy <- dat[,46]
dat$cds_de <- dat[,39]
dat$cds_es <- dat[,40]
dat$cds_fr <- dat[,45]
dat$cds_gr <- dat[,42]
dat$cds_ie <- dat[,41]
dat$cds_it <- dat[,38]
dat$cds_nl <- dat[,47]
#non-EZ
dat$cds_dk <- dat[,62]
dat$cds_ic <- dat[,64] #iceland
dat$cds_sv <- dat[,59] #sweden
dat$cds_uk <- dat[,60]
dat$cds_us <- dat[,61]
df <- cbind(dat[,1], dat[,66:105])
names(df)[1] <- "date"
#write.csv(df,"cleaned_datastram.csv", row.names = FALSE)
#######################
#######Tidying#########
#######################
#cols: date, country, variable, value.
#using dplyr and tidyr notation, condense variables into entries by date (NB, NAs removed)
#%>% is dplyr pipe function
tidier <- df %>% gather(key, value, -date)
#Split key column into country and variable:
tidy <- tidier %>% separate(key, into = c("variable", "country"), sep = "\\_")
#list variables and countries as factor rather than character vector
tidy$variable <- as.factor(tidy$variable)
tidy$country <- as.factor(tidy$country)
#reorder rows by country then date
tidy <- tidy %>% arrange(date, country)
str(tidy)
tail(tidy$date)
summary(tidy$country)
?spread
clean <- tidy %>% spread(variable, value, -date, -country)
clean <- tidy %>% spread(variable, value)
View(clean)
clean <- clean %>% arrange(country, date)
View(clean)
greek_1 <- seq(as.Date("2009-10-20"), as.Date("2012-03-09"), by="days")
summary(greek_1)
str(greek_1)
greek_2 <- seq(as.Date("2015-01-25"), as.Date("2015-07-02"), by="days")
greek_1 <- seq(as.Date("2009-10-20"), as.Date("2012-03-09"), by="days")
greek_2 <- seq(as.Date("2015-01-25"), as.Date("2015-07-02"), by="days")
ireland_1 <- seq(as.Date("2010-10-18"), as.Date("2011-03-09"), by="days")
portugal_1 <- seq(as.Date("2011-03-23"), as.Date("2011-06-05"), by="days")
spain_1 <- seq(as.Date("2012-05-25"), as.Date("2012-06-09"), by="days")
greek <- greek_1 + greek_2
ireland <- seq(as.Date("2010-10-18"), as.Date("2011-03-09"), by="days")
portugal <- seq(as.Date("2011-03-23"), as.Date("2011-06-05"), by="days")
spain <- seq(as.Date("2012-05-25"), as.Date("2012-06-09"), by="days")
greek <- rbind(greek_1, greek_2)
clean$date_a <- clean %>% ifelse(country == "gr", ifelse(date %in% greek_1, 1, ifelse(date %in% greek_2, 1, 0)),
ifelse(country == "ie", ifelse(date %in% ireland, 1, 0),
ifelse(country == "pt", ifelse(date %in% portugal, 1, 0),
ifelse(country == "es", ifelse(date %in% spain, 1, 0), 0)
)))
str(clean)
clean <- mutate(clean, ireland_a = ifelse(country == "ie" & date %in% greek_1, 1, 0), na.rm = FALSE)
View(clean)
summary(clean(ireland_a))
summary(clean$ireland_a)
str(clean$ireland_a)
?summary
a <- filter(clean, country == "ie")
str(a$ireland_a)
summary(a$ireland_a)
plot(clean$date, clean$ireland_a)
greek <- c(greek_1, greek_2)
greek_1 <- seq(as.Date("2009-10-20"), as.Date("2012-03-09"), by="days")
greek_2 <- seq(as.Date("2015-01-25"), as.Date("2015-07-02"), by="days")
greek <- c(greek_1, greek_2)
ireland <- seq(as.Date("2010-10-18"), as.Date("2011-03-09"), by="days")
portugal <- seq(as.Date("2011-03-23"), as.Date("2011-06-05"), by="days")
spain <- seq(as.Date("2012-05-25"), as.Date("2012-06-09"), by="days")
clean <- mutate(clean, greece_a = ifelse(country == "gr" & date %in% greek, 1, 0))
clean <- mutate(clean, ireland_a = ifelse(country == "ie" & date %in% ireland, 1, 0))
clean <- mutate(clean, portugal_a = ifelse(country == "pt" & date %in% portugal, 1, 0))
clean <- mutate(clean, spain_a = ifelse(country == "es" & date %in% spain, 1, 0))
clean <- mutate(clean, crisis_a =  max(greece_a:spain_a))
clean <- mutate(clean, crisis_a =  max(clean[,7:10]))
View(clean)
#library(xlsx)
library(dplyr)
library(tidyr)
setwd("~/Academic/SGPE/Dissertation/Data/csv")
#setwd("~/dissertation/Data/csv/")
dat <- read.csv("datastream_combined.csv", colClasses = "character")
#basic manipulation
for(i in 2:65){
dat[,i] <- as.numeric(dat[,i])
}
dat[,1] <- as.Date(dat[,1], format = "%d/%m/%Y")
dat <- subset(dat, dat$date > as.Date("2007-01-01"))
#Generate bond spreads to DE
dat$bsp_at <- dat[,5] - dat[,2]
dat$bsp_be <- dat[,6] - dat[,2]
dat$bsp_es <- dat[,15] - dat[,2]
dat$bsp_fn <- dat[,11] - dat[,2]
dat$bsp_fr <- dat[,3] - dat[,2]
dat$bsp_gr <- dat[,7] - dat[,2]
dat$bsp_ie <- dat[,8] - dat[,2]
dat$bsp_it <- dat[,4] - dat[,2]
dat$bsp_lt <- dat[,12] - dat[,2]
dat$bsp_ma <- dat[,13] - dat[,2]
dat$bsp_nl <- dat[,9] - dat[,2]
dat$bsp_pt <- dat[,10] - dat[,2]
dat$bsp_sk <- dat[,14] - dat[,2]
#Global Indicators
dat$vix_all <- dat[,16]
dat$vstoxx_all <- dat[,17]
dat$euribor_all <- dat[,18]
#Stock price indices
dat$stocks_at <- dat[,27]
dat$stocks_de <- dat[,20]
dat$stocks_es <- dat[,26]
dat$stocks_fr <- dat[,21]
dat$stocks_gr <- dat[,25]
dat$stocks_ie <- dat[,19]
dat$stocks_it <- dat[,24]
dat$stocks_nl <- dat[,22]
dat$stocks_pt <- dat[,23]
#CDS
dat$cds_at <- dat[,43]
dat$cds_be <- dat[,44]
dat$cds_cy <- dat[,46]
dat$cds_de <- dat[,39]
dat$cds_es <- dat[,40]
dat$cds_fr <- dat[,45]
dat$cds_gr <- dat[,42]
dat$cds_ie <- dat[,41]
dat$cds_it <- dat[,38]
dat$cds_nl <- dat[,47]
#non-EZ
dat$cds_dk <- dat[,62]
dat$cds_ic <- dat[,64] #iceland
dat$cds_sv <- dat[,59] #sweden
dat$cds_uk <- dat[,60]
dat$cds_us <- dat[,61]
df <- cbind(dat[,1], dat[,66:105])
names(df)[1] <- "date"
#write.csv(df,"cleaned_datastram.csv", row.names = FALSE)
#######################
#######Tidying#########
#######################
#cols: date, country, variable, value.
#using dplyr and tidyr notation, condense variables into entries by date (NB, NAs removed)
#%>% is dplyr pipe function
tidier <- df %>% gather(key, value, -date)
#Split key column into country and variable:
tidy <- tidier %>% separate(key, into = c("variable", "country"), sep = "\\_")
#list variables and countries as factor rather than character vector
tidy$variable <- as.factor(tidy$variable)
tidy$country <- as.factor(tidy$country)
#reorder rows by country then date
tidy <- tidy %>% arrange(date, country)
clean <- tidy %>% spread(variable, value)
clean <- clean %>% arrange(country, date)
######################
##Dummy Variables#####
######################
#Date schedule A
greek_1 <- seq(as.Date("2009-10-20"), as.Date("2012-03-09"), by="days")
greek_2 <- seq(as.Date("2015-01-25"), as.Date("2015-07-02"), by="days")
greek <- c(greek_1, greek_2)
ireland <- seq(as.Date("2010-10-18"), as.Date("2011-03-09"), by="days")
portugal <- seq(as.Date("2011-03-23"), as.Date("2011-06-05"), by="days")
spain <- seq(as.Date("2012-05-25"), as.Date("2012-06-09"), by="days")
clean <- mutate(clean, greece_a = ifelse(country == "gr" & date %in% greek, 1, 0))
clean <- mutate(clean, ireland_a = ifelse(country == "ie" & date %in% ireland, 1, 0))
clean <- mutate(clean, portugal_a = ifelse(country == "pt" & date %in% portugal, 1, 0))
clean <- mutate(clean, spain_a = ifelse(country == "es" & date %in% spain, 1, 0))
#clean <- mutate(clean, crisis_a =  max(clean[,9:12]))
clean %>% plot(date, greece_a, lty="1")
clean %>% plot(date, greece_a)
View(clean)
plot(clean$date, clean$greece_a)
lines(clean$ireland_a)
lines(clean$portugal_a)
lines(clean$spain_a)
plot.new()
plot(clean$date, clean$portugal_a)
plot.new()
plot(clean$date, clean$spain_a)
plot.new()
plot(clean$date, clean$ireland_a)
names(clean)
clean <- mutate(clean, crisis_a =  max(clean[,9:12]))
str(clean$crisis_a)
summary(clean$crisis_a)
clean <- mutate(clean, crisis_a =  max(c(greece_a, ireland_a, portugal_a, spain_a)))
summary(clean$crisis_a)
?max
clean <- mutate(clean, crisis_a = ifelse(greece_a + ireland_a + portugal_a +spain_a == 0, 0, 1))
summary(clean$crisis_a)
plot(clean$date, clean$crisis_a)
View(clean)
